import seaborn as sns; sns.set()
import matplotlib.pyplot as plt
import pandas as pd

def nice_plot_history(history):
    loss = history.history["loss"] #[312.2930035836356, 8.307745451245989, 1.2924154600075313, 0.30858381986618044, 0.38325764792306083, 1.203862748146057, 0.47707218612943375, 0.5389617855208261, 3.5168005742345536, 0.49397323046411784, 0.49397321156093055, 0.49397316558020454, 0.4939712405204773, 5.841040219238826, 3.235816503252302, 0.4923936080932617, 0.4920979062148503, 0.4907712273938315, 0.48182867561067855, 0.48640545691762654, 0.4828740201677595, 0.4789736022268023, 0.472843120098114, 0.46921399899891447, 0.4643090222563062, 0.45759199517113824, 0.44992663536752975, 0.44367237601961407, 0.43476782764707295, 0.42566917794091363]
    val_loss = history.history["val_loss"] #[0.5286757326126099, 0.2425833038489024, 0.26228026111920677, 0.2598864257335663, 0.2978562418619792, 0.508716340859731, 0.5084260400136312, 0.4114651809136073, 0.5096775682767233, 0.5096775682767233, 0.5096775682767233, 0.5096775682767233, 0.5095644116401672, 0.5096777081489563, 0.5096776700019836, 0.5096776700019836, 0.5096777208646138, 0.5096673321723938, 0.5096775301297506, 0.509676551024119, 0.5096763094266256, 0.5096761695543925, 0.5096760042508444, 0.5096759406725565, 0.5096746818224589, 0.5096738680203756, 0.5096733212471009, 0.509672888914744, 0.5096722912788391, 0.5096718335151672]
    accuracy = history.history["accuracy"] #[0.49428571445601327, 0.5085714275496347, 0.5071428557804653, 0.5371428557804653, 0.5228571430274418, 0.45571428520338875, 0.49999999863760813, 0.5228571430274418, 0.4742857132639204, 0.5057142857142857, 0.5057142840112958, 0.5057142858845847, 0.5057142843518938, 0.49285714183534896, 0.5042857142857143, 0.5057142853736878, 0.5057142843518938, 0.5057142843518938, 0.5114285714285715, 0.5057142850330898, 0.5057142846924918, 0.5057142843518938, 0.5057142845221928, 0.5057142843518938, 0.5057142858845847, 0.5057142843518938, 0.5057142857142857, 0.5057142846924918, 0.5057142880984715, 0.5057142845221928]
    val_accuracy = history.history["val_accuracy"] #[0.6033333365122477, 0.6499999992052714, 0.6266666666666667, 0.6333333333333333, 0.5833333349227905, 0.49000000158945717, 0.49000000158945717, 0.6166666674613953, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717, 0.49000000158945717]

    data=[loss, val_loss, accuracy, val_accuracy]
    columns=['loss', 'val_loss', 'accuracy', 'val_accuracy']

    df = pd.DataFrame(data)
    df = df.transpose()
    df.columns = columns

    #print(df)

    #ax = sns.lineplot(y="loss", x=df.index, data=df, label="loss")
    #ax = sns.lineplot(y="val_loss", x=df.index, data=df, label="val_loss")
    ax = sns.lineplot(y="accuracy", x=df.index, data=df, label="accuracy")
    ax = sns.lineplot(y="val_accuracy", x=df.index, data=df, label="val_accuracy")

    # in text the max reached Y of maybe both? / in the last 50% of plot

    plt.ylim(0, 1)
    plt.ylabel("Accuracy")

    plt.legend()
    plt.show()
